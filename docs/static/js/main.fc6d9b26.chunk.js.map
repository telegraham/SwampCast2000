{"version":3,"sources":["adapter.js","components/Graph.js","components/Graphs.js","components/BigNumber.js","components/Location.js","components/Nav.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["API_ROOT","process","axisStyle","axisLabel","fontFamily","tickLabels","axisStyleDegrees","Object","objectSpread","fill","axisStyleHumidity","humidityFormatter","tick","temperatureFormatter","tickValues","arr","now","Date","getTime","map","minutesAgo","putDataInHoverCallback","callbackKey","data","_this","props","sizeFn","datum","active","react_default","a","createElement","victory_chart","containerComponent","victory_voronoi_container","voronoiDimension","onActivated","this","onDeactivated","height","domain","x","range","domainPadding","y","victory_axis","label","scale","tickCount","tickFormat","xTickFn","xTick","style","dependentAxis","orientation","victory_line","interpolation","stroke","victory_scatter","size","React","PureComponent","DAYS","value","d","hours","getHours","minutes","getMinutes","concat","getDay","className","Graph_default","mouseOver","mouseOut","last_5_minutes","isUpdate","last_hour","today","timeOfDay","last_week","dayOfWeek","_default","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","scrollY","window","pageYOffset","handleScroll","setState","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","wrapperRef","createRef","classes","current","offsetTop","push","hover","time","join","latest","ref","Math","round","temperature","humidity","celsiusToFahrenheit","c","formatDatum","reading","sourceReadingKeyPrefix","arguments","length","undefined","sourceTimeKeyPrefix","handleReceivedReading","ago5","updatedLast5","filter","historicalReading","historical_reading","toConsumableArray","timeAgo","ago","temp","find","continuous","hum","prevState","setReadings","location","slug","locationSlug","callback","_this2","fetch","then","res","json","dataArray","_this3","name","BigNumber_default","lib","key","channel","onReceived","Graphs_default","Component","Nav","linx","locations","NavLink","to","Home","Fragment","renderLocation","renderProps","match","params","Location_default","Route","exact","path","component","render","Boolean","hostname","ReactDOM","url","HashRouter","App_default","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc6d9b26.chunk.js","sourcesContent":["\nconst API_ROOT = process.env.REACT_APP_API_URL\nexport const API_WS_ROOT = process.env.REACT_APP_SOCKET_URL;\n\n// const HEADERS = {\n//   'Content-Type': 'application/json',\n//   Accept: 'application/json',\n// };\n\nexport function getLocations(callback) {\n  fetch(`${ API_ROOT }/locations`)\n    .then(res => res.json())\n    .then(callback);\n}\n\nexport function getReadings(locationSlug, callback) {\n  fetch(`${ API_ROOT }/locations/${ locationSlug }/readings`)\n    .then(res => res.json())\n    .then(callback);\n}\n","import React from 'react'\nimport { VictoryChart, VictoryLine, VictoryScatter, VictoryAxis, VictoryVoronoiContainer } from 'victory'\n\nconst axisStyle = { \n  axisLabel: { \n    fontFamily: \"Times New Roman\" \n  }, \n  tickLabels: { \n    fontFamily: \"Times New Roman\",\n  } \n}\nconst axisStyleDegrees = { \n  ...axisStyle,\n  tickLabels: {\n    ...axisStyle.tickLabels,\n    fill: \"#c50\"\n  }\n}\nconst axisStyleHumidity = { \n  ...axisStyle,\n  tickLabels: {\n    ...axisStyle.tickLabels,\n    fill: \"#0a7\"\n  }\n}\n\nconst humidityFormatter = (tick) => tick + \"%\"\nconst temperatureFormatter = (tick) => tick + \"°\"\n\nexport default class extends React.PureComponent {\n\n  tickValues = (arr) => {\n    const now = new Date().getTime()\n    return arr.map((minutesAgo) => {\n      return now - minutesAgo * 60 * 1000;\n    })\n  }\n\n  putDataInHoverCallback = (callbackKey) => {\n    return (data) => {\n      this.props[callbackKey](data)\n    }\n  } \n\n  sizeFn = (datum, active) => active ? 4 : 2\n\n  render(){\n    return (<VictoryChart \n                          containerComponent={ <VictoryVoronoiContainer \n                                                  voronoiDimension=\"x\"\n                                                  onActivated={ this.putDataInHoverCallback(\"mouseOver\") } \n                                                  onDeactivated={ this.putDataInHoverCallback(\"mouseOut\") }/> } \n                          height={390} \n                          domain={ { x: this.props.range } } \n                          domainPadding={ { y: 20 } } >\n            <VictoryAxis \n              label=\"Time\"\n              scale=\"time\"\n              tickCount={ this.props.tickCount }\n              tickFormat={ this.props.xTickFn || this.props.xTick }\n              tickValues={ this.props.tickValues ? this.tickValues(this.props.tickValues) : this.props.tickValues }\n              style={ axisStyle } />\n            <VictoryAxis \n              dependentAxis \n              tickFormat={ temperatureFormatter }\n              style={ axisStyleDegrees } />\n            <VictoryAxis \n              dependentAxis \n              tickFormat={ humidityFormatter }\n              orientation=\"right\"\n              style={ axisStyleHumidity } />\n            <VictoryLine\n              x=\"time\"\n              y=\"temperature\"\n              interpolation=\"linear\" data={ this.props.data }\n              style={{ data: { stroke: \"#fc0\" } }}\n            />\n            <VictoryScatter data={ this.props.data }\n              x=\"time\"\n              y=\"temperature\"\n              size={ this.sizeFn }\n              style={{ data: { fill: \"#f00\" } }}\n            />\n            <VictoryLine\n              x=\"time\"\n              y=\"humidity\"\n              interpolation=\"linear\" data={ this.props.data }\n              style={{ data: { stroke: \"#0ff\" } }}\n            />\n            <VictoryScatter data={ this.props.data }\n              x=\"time\"\n              y=\"humidity\"\n              size={ this.sizeFn }\n              style={{ data: { fill: \"#0e5\" } }}\n            />\n\n          </VictoryChart>)\n  }\n}","import React, { Component } from 'react';\nimport Graph from './Graph'\n\nconst DAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n\nexport default class extends React.PureComponent {\n\n  timeOfDay(value){\n    const d = new Date(value);\n    const hours = d.getHours()\n    const minutes = d.getMinutes()\n    return `${ hours }:${ minutes > 9 ? minutes : \"0\" + minutes  }`;\n  }\n\n  dayOfWeek(value){\n    return DAYS[new Date(value).getDay()];\n  }\n\n  render(){ \n    return (<ol className=\"charts\">\n      <li>\n        <Graph xTick={ this.props.xTick } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.last_5_minutes } isUpdate={ this.props.isUpdate } tickValues={ [5, 4, 3, 2, 1, 0] }/>\n      </li>\n      <li>\n        <Graph xTick={ this.props.xTick } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.last_hour } tickValues={ [ 50,  30, 10] } />\n      </li>\n      <li> \n        <Graph xTick={ this.props.xTick } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.today } xTickFn={ this.timeOfDay } />\n      </li>\n      <li>\n        <Graph xTick={ this.props.xTick } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.last_week } xTickFn={ this.dayOfWeek } range={ [ (new Date().getTime() - (7 * 24 * 60 * 60 * 1000)), new Date().getTime() ] } tickCount={ 4 } />\n      </li>\n    </ol>)\n    } \n}","import React, { Component } from 'react';\n\nexport default class extends React.PureComponent {\n\n  constructor(props){\n    super(props)\n    this.wrapperRef = React.createRef();\n  }\n\n  state = {\n    scrollY: window.pageYOffset\n  }\n\n  handleScroll = () => {\n    this.setState({\n      scrollY: window.pageYOffset\n    })\n  }\n\n  componentDidMount =  function() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount =  function() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  className(datum){\n    const classes = [\"big-number-wrapper\"];\n\n    if (this.wrapperRef && this.wrapperRef.current\n      && this.state.scrollY > this.wrapperRef.current.offsetTop)\n      classes.push(\"fixed\")\n    if (this.props.hover)\n      classes.push(\"hover\")\n    if (!datum.time)\n      classes.push(\"loading\")\n    return classes.join(\" \")\n  }\n\n  render(){\n    const datum = this.props.hover || this.props.latest;\n    return (<div ref={ this.wrapperRef } className={ this.className(datum) }>\n    {\n      datum.time ? (<dl className=\"big-number\">\n        <dt>Temperature</dt>\n        <dd className=\"temperature\">{ Math.round(datum.temperature) }°</dd>\n        <dt>Humidity</dt>\n        <dd className=\"humidity\">{ Math.round(datum.humidity) }%</dd>\n        <dt>Time</dt>\n        <dd className=\"time\">{ this.props.xTick(datum.time) }</dd>\n      </dl>) : \"\"\n    }    \n    </div>)\n  }\n\n\n}","import React, { Component } from 'react';\nimport { getReadings } from '../adapter'\nimport { ActionCable } from 'react-actioncable-provider';\nimport Graphs from './Graphs'\nimport BigNumber from './BigNumber'\n\nimport timeAgo from 'time-ago'\n\n\nconst celsiusToFahrenheit = c => c * 9 / 5 + 32\n\nexport default class extends Component {\n\n  state = {\n    latest: {},\n    last_5_minutes: [],\n    last_hour: [],\n    today: [],\n    last_week: [],\n    // last_month: [],\n    // last_year: [],\n  }\n\n  componentDidMount(){\n    this.setReadings()\n  }\n\n  componentDidUpdate(){\n    if (this.props.location.slug !== this.state.locationSlug)\n      this.setReadings()\n  }\n\n  setReadings(){\n    const { slug } = this.props.location;\n    // console.log(this.state)\n    getReadings(slug, (data) => {\n      // console.log(data)\n      this.setState({\n        latest: this.formatDatum(data.latest),\n        last_5_minutes: this.data(data.last_5_minutes),\n        last_hour: this.data(data.last_hour, \"mean_\", \"start_\"),\n        today: this.data(data.today, \"mean_\", \"start_\"),\n        last_week: this.data(data.last_week, \"mean_\", \"start_\"),\n        locationSlug: slug,\n        isUpdate: false\n      })\n    })\n  }\n\n  data(dataArray, sourceReadingKeyPrefix = \"\", sourceTimeKeyPrefix = \"\"){\n    return dataArray.map((datum) => this.formatDatum(datum, sourceReadingKeyPrefix, sourceTimeKeyPrefix))\n  }\n\n  formatDatum = (reading, sourceReadingKeyPrefix = \"\", sourceTimeKeyPrefix = \"\") => ({\n    humidity: reading[sourceReadingKeyPrefix + \"humidity\"],\n    temperature: celsiusToFahrenheit(reading[sourceReadingKeyPrefix + \"temperature\"]),\n    time: new Date(reading[sourceTimeKeyPrefix + \"time\"]).getTime()\n  })\n\n  handleReceivedReading = (reading) => {\n    const ago5 = new Date() - 5 * 60 * 1000\n    // const ago60 = new Date() - 60 * 60 * 1000\n    const updatedLast5 = this.state.last_5_minutes.filter(reading => reading.time > ago5)\n    // const updatedLastHour = this.state.last_hour.filter(reading => reading.time > ago60)\n    const historicalReading = this.formatDatum(reading.historical_reading);\n    this.setState({\n      latest: historicalReading,\n      last_5_minutes: [ ...updatedLast5, historicalReading ],\n      // last_hour: [ ...updatedLastHour, historicalReading ],\n      isUpdate: true\n    })\n  }\n\n  xTick = (tick) => { \n    const difference = new Date() - tick;\n    return difference < 5 * 1000 ? \"now\" : timeAgo.ago(tick, false) + \" ago\" \n  }\n\n  mouseOver = (data) => {\n    // // console.log(\"over\", data[0] ? data[0].time : null)\n    const temp = data.find(datum => datum.temperature && !datum.continuous)\n    const hum = data.find(datum => datum.humidity && !datum.continuous)\n    if (temp && hum)\n      this.setState({ hover: { temperature: temp.temperature, humidity: hum.humidity, time: temp.time } })\n      // this.setState({ hover: { temperature: 9, humidity: 3, time: 200 } })\n  }\n  mouseOut = (data) => {\n    // console.log(\"out\", data[0] ? data[0].time : null, this.state.hover && this.state.hover.time === data[0].time ? \"matches state\" : \"nope\")\n    // if (this.state.hover && this.state.hover.time === data[0].time)\n    this.setState((prevState) => {\n      if (!data[0] || (prevState.hover && prevState.hover.time === data[0].time))\n        return { hover: null }\n      else\n        return { }\n    })\n  }\n\n  render(){\n    const { location } = this.props;\n    return <section>\n      <hr className=\"graph-divider-top\" />\n      <h2>\n        { this.props.location.name }\n      </h2>\n      <BigNumber hover={ this.state.hover } latest={ this.state.latest } xTick={ this.xTick } />\n      <ActionCable\n        key={ location.slug }  \n        channel={{ channel: 'ReadingsChannel', location: location.slug }}\n        onReceived={this.handleReceivedReading}\n      />\n      <Graphs \n        mouseOver={ this.mouseOver } \n        mouseOut={ this.mouseOut } \n        last_5_minutes={ this.state.last_5_minutes }\n        last_hour={ this.state.last_hour }\n        today={ this.state.today }\n        last_week={ this.state.last_week }\n        isUpdate={ this.state.isUpdate }\n        xTick={ this.xTick }\n        />\n    </section>\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function(props) {\n    const linx = props.locations.map(location => { return (<li key={ location.slug }>\n        <NavLink to={ \"/\" + location.slug }>{ location.name }</NavLink>\n      </li>)\n    });\n\n    return (<ol className=\"locations\">\n      { linx }\n    </ol>)\n}\n","import React from 'react';\n\nexport default () => (<React.Fragment>\n  <marquee>Welcome to SwampCast 2000!!!</marquee>\n  <p>Select a location from the menu ^^</p>\n</React.Fragment>)\n","import React, { Component } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\n\n\nimport { getLocations } from './adapter'\n\nimport Location from './components/Location'\nimport Nav from './components/Nav'\nimport Home from './components/Home'\n\n\nexport default class extends Component {\n\n  state = {\n    locations: []\n  }\n\n  componentDidMount(){\n    getLocations(data => {\n      this.setState({ locations: data });\n    });\n  }\n\n  renderLocation = (renderProps) => {\n    const slug = renderProps.match.params.locationSlug;\n    const location = this.state.locations.find(location => location.slug === slug)\n    if (location)\n      return <Location location={ location } />\n    else\n      return <React.Fragment />\n  }\n\n  render(){\n    return (\n      <React.Fragment>\n        <Nav locations={ this.state.locations } />\n        <h1 className=\"header-main\">\n          <NavLink to=\"/\">SwampCast 2000</NavLink>\n        </h1>\n        <Route exact path=\"/\" component={ Home } /> \n        <Route path=\"/:locationSlug\" render={ this.renderLocation } />\n      </React.Fragment>\n    );\n  }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ActionCableProvider } from 'react-actioncable-provider';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { API_WS_ROOT } from './adapter'\n\nReactDOM.render(<ActionCableProvider url={API_WS_ROOT}>\n      <Router>\n        <App />\n      </Router>\n    </ActionCableProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}