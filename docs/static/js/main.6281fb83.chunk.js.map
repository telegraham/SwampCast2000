{"version":3,"sources":["adapter.js","components/Graph.js","components/Graphs.js","components/BigNumber.js","components/Location.js","components/Nav.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["API_ROOT","process","axisStyle","axisLabel","fontFamily","tickLabels","axisStyleDegrees","Object","objectSpread","fill","axisStyleHumidity","humidityFormatter","tick","temperatureFormatter","tickValues","arr","now","Date","getTime","map","minutesAgo","putDataInHoverCallback","callbackKey","data","_this","props","sizeFn","datum","active","react_default","a","createElement","victory_chart","containerComponent","victory_voronoi_container","voronoiDimension","onActivated","this","onDeactivated","height","domain","x","range","domainPadding","y","victory_label","text","title","textAnchor","style","victory_axis","scale","tickCount","tickFormat","xTickFn","xTick","dependentAxis","orientation","victory_line","interpolation","stroke","victory_scatter","size","React","PureComponent","DAYS","value","d","hours","getHours","minutes","getMinutes","concat","getDay","className","Graph_default","mouseOver","mouseOut","last_5_minutes","isUpdate","last_hour","today","timeOfDay","last_week","dayOfWeek","_default","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","scrollY","window","pageYOffset","justUpdated","handleScroll","setState","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","wrapperRef","createRef","_this2","justUpdatedTimeout","setTimeout","classes","current","offsetTop","push","hover","time","join","latest","ref","Math","round","temperature","humidity","nextProps","prevState","lastLatestTime","DEFAULT_STATE","celsiusToFahrenheit","c","formatDatum","reading","sourceReadingKeyPrefix","arguments","length","undefined","sourceTimeKeyPrefix","handleReceivedReading","ago5","updatedLast5","filter","historicalReading","historical_reading","toConsumableArray","timeAgo","ago","temp","find","continuous","hum","setReadings","location","slug","locationSlug","callback","fetch","then","res","json","dataArray","_this3","name","BigNumber_default","lib","key","channel","onReceived","Graphs_default","Component","Nav","linx","locations","NavLink","to","Home","Fragment","renderLocation","renderProps","match","params","Location_default","Route","exact","path","component","render","Boolean","hostname","ReactDOM","url","HashRouter","App_default","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6281fb83.chunk.js","sourcesContent":["\nconst API_ROOT = process.env.REACT_APP_API_URL\nexport const API_WS_ROOT = process.env.REACT_APP_SOCKET_URL;\n\n// const HEADERS = {\n//   'Content-Type': 'application/json',\n//   Accept: 'application/json',\n// };\n\nexport function getLocations(callback) {\n  fetch(`${ API_ROOT }/locations`)\n    .then(res => res.json())\n    .then(callback);\n}\n\nexport function getReadings(locationSlug, callback) {\n  fetch(`${ API_ROOT }/locations/${ locationSlug }/readings`)\n    .then(res => res.json())\n    .then(callback);\n}\n","import React from 'react'\nimport { VictoryChart, VictoryLabel, VictoryLine, VictoryScatter, VictoryAxis, VictoryVoronoiContainer } from 'victory'\n\nconst axisStyle = { \n  axisLabel: { \n    fontFamily: \"Times New Roman\" \n  }, \n  tickLabels: { \n    fontFamily: \"Times New Roman\",\n  } \n}\nconst axisStyleDegrees = { \n  ...axisStyle,\n  tickLabels: {\n    ...axisStyle.tickLabels,\n    fill: \"#c50\"\n  }\n}\nconst axisStyleHumidity = { \n  ...axisStyle,\n  tickLabels: {\n    ...axisStyle.tickLabels,\n    fill: \"#0a7\"\n  }\n}\n\nconst humidityFormatter = (tick) => tick + \"%\"\nconst temperatureFormatter = (tick) => tick + \"°\"\n\nexport default class extends React.PureComponent {\n\n  tickValues = (arr) => {\n    const now = new Date().getTime()\n    return arr.map((minutesAgo) => {\n      return now - minutesAgo * 60 * 1000;\n    })\n  }\n\n  putDataInHoverCallback = (callbackKey) => {\n    return (data) => {\n      this.props[callbackKey](data)\n    }\n  } \n\n  sizeFn = (datum, active) => active ? 4 : 2\n\n  render(){\n    return (<VictoryChart containerComponent={ <VictoryVoronoiContainer \n                                                  voronoiDimension=\"x\"\n                                                  onActivated={ this.putDataInHoverCallback(\"mouseOver\") } \n                                                  onDeactivated={ this.putDataInHoverCallback(\"mouseOut\") }/> } \n                          height={390} \n                          domain={ { x: this.props.range } } \n                          domainPadding={ { y: 20 } } >\n            <VictoryLabel \n              text={ this.props.title } \n              x={225} y={30} \n              textAnchor=\"middle\" \n              style={ { \n                  fontFamily: \"Times New Roman\" \n                } }/>\n            <VictoryAxis \n              scale=\"time\"\n              tickCount={ this.props.tickCount }\n              tickFormat={ this.props.xTickFn || this.props.xTick }\n              tickValues={ this.props.tickValues ? this.tickValues(this.props.tickValues) : this.props.tickValues }\n              style={ axisStyle } />\n            <VictoryAxis \n              dependentAxis \n              tickFormat={ temperatureFormatter }\n              style={ axisStyleDegrees } />\n            <VictoryAxis \n              dependentAxis \n              tickFormat={ humidityFormatter }\n              orientation=\"right\"\n              style={ axisStyleHumidity } />\n            <VictoryLine\n              x=\"time\"\n              y=\"temperature\"\n              interpolation=\"linear\" data={ this.props.data }\n              style={{ data: { stroke: \"#fc0\" } }}\n            />\n            <VictoryScatter data={ this.props.data }\n              x=\"time\"\n              y=\"temperature\"\n              size={ this.sizeFn }\n              style={{ data: { fill: \"#f00\" } }}\n            />\n            <VictoryLine\n              x=\"time\"\n              y=\"humidity\"\n              interpolation=\"linear\" data={ this.props.data }\n              style={{ data: { stroke: \"#0ff\" } }}\n            />\n            <VictoryScatter data={ this.props.data }\n              x=\"time\"\n              y=\"humidity\"\n              size={ this.sizeFn }\n              style={{ data: { fill: \"#0e5\" } }}\n            />\n\n          </VictoryChart>)\n  }\n}","import React from 'react';\nimport Graph from './Graph'\n\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n\nexport default class extends React.PureComponent {\n\n  timeOfDay(value){\n    const d = new Date(value);\n    const hours = d.getHours()\n    const minutes = d.getMinutes()\n    return `${ hours }:${ minutes > 9 ? minutes : \"0\" + minutes  }`;\n  }\n\n  dayOfWeek(value){\n    return DAYS[new Date(value).getDay()];\n  }\n\n  render(){ \n    return (<ol className=\"charts\">\n      <li>\n        <Graph title=\"Last 5 minutes\" xTick={ this.props.xTick } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.last_5_minutes } isUpdate={ this.props.isUpdate } tickValues={ [5, 4, 3, 2, 1, 0] }/>\n      </li>\n      <li>\n        <Graph title=\"This hour\" xTick={ this.props.xTick } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.last_hour } tickValues={ [ 50,  30, 10] } />\n      </li>\n      <li> \n        <Graph title=\"Last 24 hours\" xTick={ this.props.xTick } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.today } xTickFn={ this.timeOfDay } />\n      </li>\n      <li>\n        <Graph title=\"This week\" xTick={ this.props.xTick } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.last_week } xTickFn={ this.dayOfWeek } range={ [ (new Date().getTime() - (7 * 24 * 60 * 60 * 1000)), new Date().getTime() ] } tickCount={ 6 } />\n      </li>\n    </ol>)\n    } \n}","import React from 'react';\n\nexport default class extends React.PureComponent {\n\n  constructor(props){\n    super(props)\n    this.wrapperRef = React.createRef();\n  }\n\n  state = {\n    scrollY: window.pageYOffset,\n    justUpdated: false\n  }\n\n  handleScroll = () => {\n    this.setState({\n      scrollY: window.pageYOffset\n    })\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const justUpdated = prevState.lastLatestTime && nextProps.latest.time && prevState.lastLatestTime !== nextProps.latest.time\n    // console.log(prevState.lastLatestTime, nextProps.latest.time, justUpdated)\n    return {\n      justUpdated: justUpdated,\n      lastLatestTime: nextProps.latest.time\n    };\n  }\n\n  componentDidMount =  function() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount =  function() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  componentDidUpdate() {\n    if (this.state.justUpdated && !this.justUpdatedTimeout)\n      this.justUpdatedTimeout = setTimeout(() => {\n        this.setState({ justUpdated: false }, () => {\n          this.justUpdatedTimeout = null;\n        })\n      }, 1000)\n  }\n\n  className(datum){\n    const classes = [\"big-number-wrapper\"];\n\n    if (this.wrapperRef && this.wrapperRef.current\n      && this.state.scrollY > this.wrapperRef.current.offsetTop)\n      classes.push(\"fixed\")\n    if (this.props.hover)\n      classes.push(\"hover\")\n    if (!datum.time)\n      classes.push(\"loading\")\n    if (this.state.justUpdated)\n      classes.push(\"just-updated\")\n    return classes.join(\" \")\n  }\n\n  render(){\n    const datum = this.props.hover || this.props.latest;\n    return (<div ref={ this.wrapperRef } className={ this.className(datum) }>\n    {\n      datum.time ? (<dl className=\"big-number\">\n        <dt>Temperature</dt>\n        <dd className=\"temperature\">{ Math.round(datum.temperature) }°</dd>\n        <dt>Humidity</dt>\n        <dd className=\"humidity\">{ Math.round(datum.humidity) }%</dd>\n        <dt>Time</dt>\n        <dd className=\"time\">{ this.props.xTick(datum.time) }</dd>\n      </dl>) : \"\"\n    }    \n    </div>)\n  }\n\n\n}","import React, { Component } from 'react';\nimport { getReadings } from '../adapter'\nimport { ActionCable } from 'react-actioncable-provider';\nimport Graphs from './Graphs'\nimport BigNumber from './BigNumber'\n\nimport timeAgo from 'time-ago'\n\nconst DEFAULT_STATE = {\n    latest: {},\n    last_5_minutes: [],\n    last_hour: [],\n    today: [],\n    last_week: [],\n    // last_month: [],\n    // last_year: [],\n  }\nconst celsiusToFahrenheit = c => c * 9 / 5 + 32\n\nexport default class extends Component {\n\n  state = { ...DEFAULT_STATE }\n\n  componentDidMount(){\n    this.setReadings()\n  }\n\n  componentDidUpdate(){\n    if (this.props.location.slug !== this.state.locationSlug)\n      this.setReadings()\n  }\n\n  setReadings(){\n    const { slug } = this.props.location;\n    // console.log(this.state)\n    this.setState({ ...DEFAULT_STATE, locationSlug: slug})\n    getReadings(slug, (data) => {\n      // console.log(this.formatDatum(data.latest))\n      this.setState({\n        latest: this.formatDatum(data.latest),\n        last_5_minutes: this.data(data.last_5_minutes),\n        last_hour: this.data(data.last_hour, \"mean_\", \"start_\"),\n        today: this.data(data.today, \"mean_\", \"start_\"),\n        last_week: this.data(data.last_week, \"mean_\", \"start_\"),\n        locationSlug: slug,\n        isUpdate: false\n      })\n    })\n  }\n\n  data(dataArray, sourceReadingKeyPrefix = \"\", sourceTimeKeyPrefix = \"\"){\n    return dataArray.map((datum) => this.formatDatum(datum, sourceReadingKeyPrefix, sourceTimeKeyPrefix))\n  }\n\n  formatDatum = (reading, sourceReadingKeyPrefix = \"\", sourceTimeKeyPrefix = \"\") => ({\n    humidity: reading[sourceReadingKeyPrefix + \"humidity\"],\n    temperature: celsiusToFahrenheit(reading[sourceReadingKeyPrefix + \"temperature\"]),\n    time: new Date(reading[sourceTimeKeyPrefix + \"time\"]).getTime()\n  })\n\n  handleReceivedReading = (reading) => {\n    const ago5 = new Date() - 5 * 60 * 1000\n    // const ago60 = new Date() - 60 * 60 * 1000\n    const updatedLast5 = this.state.last_5_minutes.filter(reading => reading.time > ago5)\n    // const updatedLastHour = this.state.last_hour.filter(reading => reading.time > ago60)\n    const historicalReading = this.formatDatum(reading.historical_reading);\n    this.setState({\n      latest: historicalReading,\n      last_5_minutes: [ ...updatedLast5, historicalReading ],\n      // last_hour: [ ...updatedLastHour, historicalReading ],\n      isUpdate: true\n    })\n  }\n\n  xTick = (tick) => { \n    const difference = new Date() - tick;\n    return difference < 5 * 1000 ? \"now\" : timeAgo.ago(tick, false) + \" ago\" \n  }\n\n  mouseOver = (data) => {\n    // // console.log(\"over\", data[0] ? data[0].time : null)\n    const temp = data.find(datum => datum.temperature && !datum.continuous)\n    const hum = data.find(datum => datum.humidity && !datum.continuous)\n    if (temp && hum)\n      this.setState({ hover: { temperature: temp.temperature, humidity: hum.humidity, time: temp.time } })\n      // this.setState({ hover: { temperature: 9, humidity: 3, time: 200 } })\n  }\n  mouseOut = (data) => {\n    // console.log(\"out\", data[0] ? data[0].time : null, this.state.hover && this.state.hover.time === data[0].time ? \"matches state\" : \"nope\")\n    // if (this.state.hover && this.state.hover.time === data[0].time)\n    this.setState((prevState) => {\n      if (!data[0] || (prevState.hover && prevState.hover.time === data[0].time))\n        return { hover: null }\n      else\n        return { }\n    })\n  }\n\n  render(){\n    const { location } = this.props;\n    return <section>\n      <h2>\n        { this.props.location.name }\n      </h2>\n      <BigNumber hover={ this.state.hover } latest={ this.state.latest } xTick={ this.xTick } />\n      <ActionCable\n        key={ location.slug }  \n        channel={{ channel: 'ReadingsChannel', location: location.slug }}\n        onReceived={this.handleReceivedReading}\n      />\n      { this.state.last_5_minutes.length ? <Graphs \n        mouseOver={ this.mouseOver } \n        mouseOut={ this.mouseOut } \n        last_5_minutes={ this.state.last_5_minutes }\n        last_hour={ this.state.last_hour }\n        today={ this.state.today }\n        last_week={ this.state.last_week }\n        isUpdate={ this.state.isUpdate }\n        xTick={ this.xTick }\n        /> : \"\"}\n    </section>\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function(props) {\n    const linx = props.locations.map(location => { return (<li key={ location.slug }>\n        <NavLink to={ \"/\" + location.slug }>{ location.name }</NavLink>\n      </li>)\n    });\n\n    return (<ol className=\"locations\">\n      { linx }\n    </ol>)\n}\n","import React from 'react';\n\nexport default () => (<React.Fragment>\n  <marquee>Welcome to SwampCast 2000!!!</marquee>\n  <p>Select a location from the menu ^^</p>\n</React.Fragment>)\n","import React, { Component } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\n\n\nimport { getLocations } from './adapter'\n\nimport Location from './components/Location'\nimport Nav from './components/Nav'\nimport Home from './components/Home'\n\n\nexport default class extends Component {\n\n  state = {\n    locations: []\n  }\n\n  componentDidMount(){\n    getLocations(data => {\n      this.setState({ locations: data });\n    });\n  }\n\n  renderLocation = (renderProps) => {\n    const slug = renderProps.match.params.locationSlug;\n    const location = this.state.locations.find(location => location.slug === slug)\n    if (location)\n      return <Location location={ location } />\n    else\n      return <React.Fragment />\n  }\n\n  render(){\n    return (\n      <React.Fragment>\n        <Nav locations={ this.state.locations } />\n        <h1 className=\"header-main\">\n          <NavLink to=\"/\">SwampCast 2000</NavLink>\n        </h1>\n        <hr className=\"graph-divider-top\" />\n        <Route exact path=\"/\" component={ Home } /> \n        <Route path=\"/:locationSlug\" render={ this.renderLocation } />\n      </React.Fragment>\n    );\n  }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ActionCableProvider } from 'react-actioncable-provider';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { API_WS_ROOT } from './adapter'\n\nReactDOM.render(<ActionCableProvider url={API_WS_ROOT}>\n      <Router>\n        <App />\n      </Router>\n    </ActionCableProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}