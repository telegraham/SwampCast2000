{"version":3,"sources":["adapter.js","components/Graph.js","components/Graphs.js","components/BigNumber.js","components/Location.js","components/Nav.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["API_ROOT","process","axisStyle","axisLabel","fontFamily","tickLabels","axisStyleDegrees","Object","objectSpread","fill","axisStyleHumidity","humidityFormatter","tick","temperatureFormatter","tickValues","arr","now","Date","getTime","map","minutesAgo","putDataInHoverCallback","callbackKey","data","_this","props","xTickFnLong","xTickFn","sizeFn","datum","active","react_default","a","createElement","victory_chart","containerComponent","victory_voronoi_container","voronoiDimension","onActivated","this","onDeactivated","height","domain","x","range","domainPadding","y","victory_label","text","title","textAnchor","style","victory_axis","scale","tickCount","tickFormat","dependentAxis","orientation","victory_line","interpolation","stroke","victory_scatter","size","React","PureComponent","DAYS","DAYS_SHORT","timeOfDay","value","d","hours","getHours","minutes","getMinutes","concat","timeOfDayLong","isToday","getDay","dayOfWeek","dayOfWeekLong","className","Graph_default","defaultXTickFn","mouseOver","mouseOut","last_5_minutes","isUpdate","last_hour","today","last_week","_default","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","scrollY","window","pageYOffset","justUpdated","handleScroll","setState","diff","key","previous","latest","Math","round","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","wrapperRef","createRef","_this2","justUpdatedTimeout","setTimeout","classes","current","offsetTop","push","hover","time","join","ref","temperature","humidity","timeString","xTick","nextProps","prevState","lastLatestTime","DEFAULT_STATE","celsiusToFahrenheit","c","formatDatum","reading","sourceReadingKeyPrefix","arguments","length","undefined","sourceTimeKeyPrefix","handleReceivedReading","ago5","updatedLast5","filter","historicalReading","historical_reading","toConsumableArray","timeAgo","ago","stringifyFn","temp","find","continuous","hum","setReadings","location","slug","locationSlug","callback","fetch","then","res","json","dataArray","_this3","name","BigNumber_default","lib","channel","onReceived","Graphs_default","Component","Nav","linx","locations","NavLink","to","Home","Fragment","renderLocation","renderProps","match","params","Location_default","Route","exact","path","component","render","Boolean","hostname","ReactDOM","url","HashRouter","App_default","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sQACMA,EAAWC,2HCEXC,EAAY,CAChBC,UAAW,CACTC,WAAY,mBAEdC,WAAY,CACVD,WAAY,oBAGVE,EAAgBC,OAAAC,EAAA,EAAAD,CAAA,GACjBL,EADiB,CAEpBG,WAAWE,OAAAC,EAAA,EAAAD,CAAA,GACNL,EAAUG,WADL,CAERI,KAAM,WAGJC,EAAiBH,OAAAC,EAAA,EAAAD,CAAA,GAClBL,EADkB,CAErBG,WAAWE,OAAAC,EAAA,EAAAD,CAAA,GACNL,EAAUG,WADL,CAERI,KAAM,WAIJE,EAAoB,SAACC,GAAD,OAAUA,EAAO,KACrCC,EAAuB,SAACD,GAAD,OAAUA,EAAO,qNAI5CE,WAAa,SAACC,GACZ,IAAMC,GAAM,IAAIC,MAAOC,UACvB,OAAOH,EAAII,IAAI,SAACC,GACd,OAAOJ,EAAmB,GAAbI,EAAkB,SAInCC,uBAAyB,SAACC,GACxB,OAAO,SAACC,GACNC,EAAKC,MAAMH,GAAaC,EAAMC,EAAKC,MAAMC,aAAeF,EAAKC,MAAME,aAIvEC,OAAS,SAACC,EAAOC,GAAR,OAAmBA,EAAS,EAAI,2EAGvC,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcC,mBAAqBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACGC,iBAAiB,IACjBC,YAAcC,KAAKlB,uBAAuB,aAC1CmB,cAAgBD,KAAKlB,uBAAuB,cACpEoB,OAAQ,IACRC,OAAS,CAAEC,EAAGJ,KAAKd,MAAMmB,OACzBC,cAAgB,CAAEC,EAAG,KACnCf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEC,KAAOT,KAAKd,MAAMwB,MAClBN,EAAG,IAAKG,EAAG,GACXI,WAAW,SACXC,MAAQ,CACJ/C,WAAY,qBAElB2B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEC,MAAM,OACNC,UAAYf,KAAKd,MAAM6B,UACvBC,WAAahB,KAAKd,MAAME,QACxBb,WAAayB,KAAKd,MAAMX,WAAayB,KAAKzB,WAAWyB,KAAKd,MAAMX,YAAcyB,KAAKd,MAAMX,WACzFqC,MAAQjD,IACV6B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEI,eAAa,EACbD,WAAa1C,EACbsC,MAAQ7C,IACVyB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEI,eAAa,EACbD,WAAa5C,EACb8C,YAAY,QACZN,MAAQzC,IACVqB,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACEf,EAAE,OACFG,EAAE,cACFa,cAAc,SAASpC,KAAOgB,KAAKd,MAAMF,KACzC4B,MAAO,CAAE5B,KAAM,CAAEqC,OAAQ,WAE3B7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAgBtC,KAAOgB,KAAKd,MAAMF,KAChCoB,EAAE,OACFG,EAAE,cACFgB,KAAOvB,KAAKX,OACZuB,MAAO,CAAE5B,KAAM,CAAEd,KAAM,WAEzBsB,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACEf,EAAE,OACFG,EAAE,WACFa,cAAc,SAASpC,KAAOgB,KAAKd,MAAMF,KACzC4B,MAAO,CAAE5B,KAAM,CAAEqC,OAAQ,WAE3B7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAgBtC,KAAOgB,KAAKd,MAAMF,KAChCoB,EAAE,OACFG,EAAE,WACFgB,KAAOvB,KAAKX,OACZuB,MAAO,CAAE5B,KAAM,CAAEd,KAAM,mBArERsD,IAAMC,eC1B7BC,EAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAClDC,EAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,mNAItDC,UAAY,SAACC,GACX,IAAMC,EAAI,IAAIpD,KAAKmD,GACbE,EAAQD,EAAEE,WACVC,EAAUH,EAAEI,aAClB,SAAAC,OAAWJ,EAAX,KAAAI,OAAsBF,EAAU,EAAIA,EAAU,IAAMA,MAGtDG,cAAgB,SAACP,GACf,IAAMQ,GAAW,IAAI3D,MAAQ4D,WAAc,IAAI5D,KAAKmD,GAAQS,SAC5D,OAAOrD,EAAK2C,UAAUC,IAAUQ,EAAU,SAAW,iBAGvDE,UAAY,SAACV,GACX,OAAOH,EAAK,IAAIhD,KAAKmD,GAAOS,aAG9BE,cAAgB,SAACX,GACf,OAAOF,EAAW,IAAIjD,KAAKmD,GAAOS,UAAY,IAAMrD,EAAK2C,UAAUC,4EAInE,OAAQrC,EAAAC,EAAAC,cAAA,MAAI+C,UAAU,UACpBjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACgD,EAAD,CAAOhC,MAAM,iBAAiBtB,QAAUY,KAAKd,MAAMyD,eAAiBC,UAAY5C,KAAKd,MAAM0D,UAAYC,SAAW7C,KAAKd,MAAM2D,SAAW7D,KAAOgB,KAAKd,MAAM4D,eAAiBC,SAAW/C,KAAKd,MAAM6D,SAAWxE,WAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAE3OiB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACgD,EAAD,CAAOhC,MAAM,YAAYtB,QAAUY,KAAKd,MAAMyD,eAAiBC,UAAY5C,KAAKd,MAAM0D,UAAYC,SAAW7C,KAAKd,MAAM2D,SAAW7D,KAAOgB,KAAKd,MAAM8D,UAAYzE,WAAa,CAAE,GAAK,GAAI,OAE3LiB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACgD,EAAD,CAAOhC,MAAM,gBAAgBtB,QAAUY,KAAK4B,UAAYzC,YAAca,KAAKoC,cAAgBQ,UAAY5C,KAAKd,MAAM0D,UAAYC,SAAW7C,KAAKd,MAAM2D,SAAW7D,KAAOgB,KAAKd,MAAM+D,SAEnLzD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACgD,EAAD,CAAOhC,MAAM,YAAYtB,QAAUY,KAAKuC,UAAYpD,YAAca,KAAKwC,cAAgBI,UAAY5C,KAAKd,MAAM0D,UAAYC,SAAW7C,KAAKd,MAAM2D,SAAW7D,KAAOgB,KAAKd,MAAMgE,UAAa7C,MAAQ,EAAG,IAAI3B,MAAOC,UAAa,QAA2B,IAAID,MAAOC,WAAcoC,UAAY,aAlCxQS,IAAMC,6BCFjC,SAAA0B,EAAYjE,GAAM,IAAAD,EAAA,OAAAjB,OAAAoF,EAAA,EAAApF,CAAAgC,KAAAmD,IAChBlE,EAAAjB,OAAAqF,EAAA,EAAArF,CAAAgC,KAAAhC,OAAAsF,EAAA,EAAAtF,CAAAmF,GAAAI,KAAAvD,KAAMd,KAIRsE,MAAQ,CACNC,QAASC,OAAOC,YAChBC,aAAa,GAPG3E,EAUlB4E,aAAe,WACb5E,EAAK6E,SAAS,CACZL,QAASC,OAAOC,eAZF1E,EAsClB8E,KAAO,SAACC,GAEN,IAAK/E,EAAKuE,MAAMS,SACd,MAAO,GACT,IAAMC,EAASC,KAAKC,MAAMnF,EAAKuE,MAAMU,OAAOF,IACtCC,EAAWE,KAAKC,MAAMnF,EAAKuE,MAAMS,SAASD,IAChD,OAAIE,IAAWD,EACN,eACAC,EAASD,EACT,eACAC,EAASD,EACT,oBADJ,GAhDWhF,EAoDlBoF,kBAAqB,WACnBX,OAAOY,iBAAiB,SAAUtE,KAAK6D,eArDvB5E,EAwDlBsF,qBAAwB,WACtBb,OAAOc,oBAAoB,SAAUxE,KAAK6D,eAvD1C5E,EAAKwF,WAAajD,IAAMkD,YAFRzF,oFA4DG,IAAA0F,EAAA3E,KACfA,KAAKwD,MAAMI,cAAgB5D,KAAK4E,qBAClC5E,KAAK4E,mBAAqBC,WAAW,WACnCF,EAAKb,SAAS,CAAEF,aAAa,GAAS,WACpCe,EAAKC,mBAAqB,QAE3B,wCAGGtF,GACR,IAAMwF,EAAU,CAAC,sBAWjB,OATI9E,KAAKyE,YAAczE,KAAKyE,WAAWM,SAClC/E,KAAKwD,MAAMC,QAAUzD,KAAKyE,WAAWM,QAAQC,WAChDF,EAAQG,KAAK,SACXjF,KAAKd,MAAMgG,OACbJ,EAAQG,KAAK,SACV3F,EAAM6F,MACTL,EAAQG,KAAK,WACXjF,KAAKwD,MAAMI,aACbkB,EAAQG,KAAK,gBACRH,EAAQM,KAAK,sCAIpB,IAAM9F,EAAQU,KAAKd,MAAMgG,OAASlF,KAAKd,MAAMgF,OAC7C,OAAQ1E,EAAAC,EAAAC,cAAA,OAAK2F,IAAMrF,KAAKyE,WAAahC,UAAYzC,KAAKyC,UAAUnD,IAE9DA,EAAM6F,KAAQ3F,EAAAC,EAAAC,cAAA,MAAI+C,UAAU,cAC1BjD,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,MAAI+C,UAAU,eAAgB0B,KAAKC,MAAM9E,EAAMgG,aAA/C,QAAiEtF,KAAKd,MAAMgG,MAAQ,GAAKlF,KAAK+D,KAAK,gBACnGvE,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,MAAI+C,UAAU,YAAa0B,KAAKC,MAAM9E,EAAMiG,UAA5C,KAA2DvF,KAAKd,MAAMgG,MAAQ,GAAKlF,KAAK+D,KAAK,aAC7FvE,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,MAAI+C,UAAU,QAASnD,EAAMkG,YAAcxF,KAAKd,MAAMuG,MAAMnG,EAAM6F,QAC3D,uDA/EmBO,EAAWC,GACzC,IAAM/B,EAAc+B,EAAUC,gBAAkBF,EAAUxB,OAAOiB,MAAQQ,EAAUC,iBAAmBF,EAAUxB,OAAOiB,KAavH,MAAO,CACLvB,YAAaA,EACbK,SAXGyB,EAAUxB,OAAOiB,KAEbvB,EACI+B,EAAUzB,OAEVyB,EAAU1B,SAJV,KAWXC,OAAQwB,EAAUxB,OAClB0B,eAAgBF,EAAUxB,OAAOiB,aApCV3D,IAAMC,iCCM7BoE,EAAgB,CAClB3B,OAAQ,GACRpB,eAAgB,GAChBE,UAAW,GACXC,MAAO,GACPC,UAAW,IAIT4C,EAAsB,SAAAC,GAAC,OAAQ,EAAJA,EAAQ,EAAI,iNAI3CvC,qBAAaqC,KAiCbG,YAAc,SAACC,GAAD,IAAUC,EAAVC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAmC,GAAIG,EAAvCH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA6D,GAA7D,MAAqE,CACjFZ,SAAUU,EAAQC,EAAyB,YAC3CZ,YAAaQ,EAAoBG,EAAQC,EAAyB,gBAClEf,KAAM,IAAIzG,KAAKuH,EAAQK,EAAsB,SAAS3H,cAGxD4H,sBAAwB,SAACN,GACvB,IAAMO,EAAO,IAAI9H,KAAS,IAEpB+H,EAAexH,EAAKuE,MAAMV,eAAe4D,OAAO,SAAAT,GAAO,OAAIA,EAAQd,KAAOqB,IAE1EG,EAAoB1H,EAAK+G,YAAYC,EAAQW,oBACnD3H,EAAK6E,SAAS,CACZI,OAAQyC,EACR7D,eAAe9E,OAAA6I,EAAA,EAAA7I,CAAMyI,GAAPtE,OAAA,CAAqBwE,IAEnC5D,UAAU,OAId0C,MAAQ,SAACpH,GAEP,OADmB,IAAIK,KAASL,EACZ,IAAW,MAAQyI,IAAQC,IAAI1I,GAAM,GAAS,UAGpEuE,UAAY,SAAC5D,EAAMgI,GAEjB,IAAMC,EAAOjI,EAAKkI,KAAK,SAAA5H,GAAK,OAAIA,EAAMgG,cAAgBhG,EAAM6H,aACtDC,EAAMpI,EAAKkI,KAAK,SAAA5H,GAAK,OAAIA,EAAMiG,WAAajG,EAAM6H,aACpDF,GAAQG,GACVnI,EAAK6E,SAAS,CAAEoB,MAAO,CAAEI,YAAa2B,EAAK3B,YAAaC,SAAU6B,EAAI7B,SAAUJ,KAAM8B,EAAK9B,KAAMK,WAAYwB,EAAYC,EAAK9B,YAGlItC,SAAW,SAAC7D,GAGVC,EAAK6E,SAAS,SAAC6B,GACb,OAAK3G,EAAK,IAAO2G,EAAUT,OAASS,EAAUT,MAAMC,OAASnG,EAAK,GAAGmG,KAC5D,CAAED,MAAO,MAET,yFAtEXlF,KAAKqH,2DAIDrH,KAAKd,MAAMoI,SAASC,OAASvH,KAAKwD,MAAMgE,cAC1CxH,KAAKqH,oDAGI,IJjBaG,EAAcC,EIiB3B9C,EAAA3E,KACHuH,EAASvH,KAAKd,MAAMoI,SAApBC,KAERvH,KAAK8D,SAAL9F,OAAAC,EAAA,EAAAD,CAAA,GAAmB6H,EAAnB,CAAkC2B,aAAcD,KJpBxBC,EIqBZD,EJrB0BE,EIqBpB,SAACzI,GAEjB2F,EAAKb,SAAS,CACZI,OAAQS,EAAKqB,YAAYhH,EAAKkF,QAC9BpB,eAAgB6B,EAAK3F,KAAKA,EAAK8D,gBAC/BE,UAAW2B,EAAK3F,KAAKA,EAAKgE,UAAW,QAAS,UAC9CC,MAAO0B,EAAK3F,KAAKA,EAAKiE,MAAO,QAAS,UACtCC,UAAWyB,EAAK3F,KAAKA,EAAKkE,UAAW,QAAS,UAC9CsE,aAAcD,EACdxE,UAAU,KJ7BhB2E,MAAK,GAAAvF,OAAK1E,EAAL,eAAA0E,OAA6BqF,EAA7B,cACFG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAKF,gCIgCHK,GAAiE,IAAAC,EAAA/H,KAAtDkG,EAAsDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7B,GAAIG,EAAyBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,GACjE,OAAO2B,EAAUlJ,IAAI,SAACU,GAAD,OAAWyI,EAAK/B,YAAY1G,EAAO4G,EAAwBI,sCA+C1E,IACEgB,EAAatH,KAAKd,MAAlBoI,SACR,OAAO9H,EAAAC,EAAAC,cAAA,eACLF,EAAAC,EAAAC,cAAA,UACIM,KAAKd,MAAMoI,SAASU,MAExBxI,EAAAC,EAAAC,cAACuI,EAAD,CAAW/C,MAAQlF,KAAKwD,MAAM0B,MAAQhB,OAASlE,KAAKwD,MAAMU,OAASuB,MAAQzF,KAAKyF,QAChFjG,EAAAC,EAAAC,cAACwI,EAAA,YAAD,CACElE,IAAMsD,EAASC,KACfY,QAAS,CAAEA,QAAS,kBAAmBb,SAAUA,EAASC,MAC1Da,WAAYpI,KAAKuG,wBAEjBvG,KAAKwD,MAAMV,eAAesD,OAAS5G,EAAAC,EAAAC,cAAC2I,EAAD,CACnCzF,UAAY5C,KAAK4C,UACjBC,SAAW7C,KAAK6C,SAChBC,eAAiB9C,KAAKwD,MAAMV,eAC5BE,UAAYhD,KAAKwD,MAAMR,UACvBC,MAAQjD,KAAKwD,MAAMP,MACnBC,UAAYlD,KAAKwD,MAAMN,UACvBH,SAAW/C,KAAKwD,MAAMT,SACtBJ,eAAiB3C,KAAKyF,QACjB,WApGgB6C,aChB7BC,EAAA,SAAwBrJ,GACpB,IAAMsJ,EAAOtJ,EAAMuJ,UAAU7J,IAAI,SAAA0I,GAAc,OAAQ9H,EAAAC,EAAAC,cAAA,MAAIsE,IAAMsD,EAASC,MACtE/H,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAASC,GAAK,IAAMrB,EAASC,MAASD,EAASU,SAInD,OAAQxI,EAAAC,EAAAC,cAAA,MAAI+C,UAAU,aAClB+F,ICROI,EAAA,kBAAOpJ,EAAAC,EAAAC,cAACF,EAAAC,EAAMoJ,SAAP,KACpBrJ,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,8PCSA8D,MAAQ,CACNiF,UAAW,MASbK,eAAiB,SAACC,GAChB,IAAMxB,EAAOwB,EAAYC,MAAMC,OAAOzB,aAChCF,EAAWrI,EAAKuE,MAAMiF,UAAUvB,KAAK,SAAAI,GAAQ,OAAIA,EAASC,OAASA,IACzE,OAAID,EACK9H,EAAAC,EAAAC,cAACwJ,EAAD,CAAU5B,SAAWA,IAErB9H,EAAAC,EAAAC,cAACF,EAAAC,EAAMoJ,SAAP,0FAZQ,IPRQpB,EOQR9C,EAAA3E,KPRQyH,EOSZ,SAAAzI,GACX2F,EAAKb,SAAS,CAAE2E,UAAWzJ,KPT/B0I,MAAK,GAAAvF,OAAK1E,EAAL,eACFkK,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAKF,oCOqBN,OACEjI,EAAAC,EAAAC,cAACF,EAAAC,EAAMoJ,SAAP,KACErJ,EAAAC,EAAAC,cAAC6I,EAAD,CAAKE,UAAYzI,KAAKwD,MAAMiF,YAC5BjJ,EAAAC,EAAAC,cAAA,MAAI+C,UAAU,eACZjD,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAASC,GAAG,KAAZ,mBAEFnJ,EAAAC,EAAAC,cAAA,MAAI+C,UAAU,sBACdjD,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYV,IAClCpJ,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAOE,KAAK,iBAAiBE,OAASvJ,KAAK8I,yBA9BtBR,aCCTkB,QACW,cAA7B9F,OAAO4D,SAASmC,UAEe,UAA7B/F,OAAO4D,SAASmC,UAEhB/F,OAAO4D,SAASmC,SAAST,MACvB,wECPNU,IAASH,OAAO/J,EAAAC,EAAAC,cAACwI,EAAA,oBAAD,CAAqByB,ITTVjM,6CSUrB8B,EAAAC,EAAAC,cAACkK,EAAA,EAAD,KACEpK,EAAAC,EAAAC,cAACmK,EAAD,QAEoBC,SAASC,eAAe,SDkH9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvC,KAAK,SAAAwC,GACjCA,EAAaC","file":"static/js/main.a3ef91bd.chunk.js","sourcesContent":["\nconst API_ROOT = process.env.REACT_APP_API_URL\nexport const API_WS_ROOT = process.env.REACT_APP_SOCKET_URL;\n\n// const HEADERS = {\n//   'Content-Type': 'application/json',\n//   Accept: 'application/json',\n// };\n\nexport function getLocations(callback) {\n  fetch(`${ API_ROOT }/locations`)\n    .then(res => res.json())\n    .then(callback);\n}\n\nexport function getReadings(locationSlug, callback) {\n  fetch(`${ API_ROOT }/locations/${ locationSlug }/readings`)\n    .then(res => res.json())\n    .then(callback);\n}\n","import React from 'react'\nimport { VictoryChart, VictoryLabel, VictoryLine, VictoryScatter, VictoryAxis, VictoryVoronoiContainer } from 'victory'\n\nconst axisStyle = { \n  axisLabel: { \n    fontFamily: \"Times New Roman\" \n  }, \n  tickLabels: { \n    fontFamily: \"Times New Roman\",\n  } \n}\nconst axisStyleDegrees = { \n  ...axisStyle,\n  tickLabels: {\n    ...axisStyle.tickLabels,\n    fill: \"#c50\"\n  }\n}\nconst axisStyleHumidity = { \n  ...axisStyle,\n  tickLabels: {\n    ...axisStyle.tickLabels,\n    fill: \"#0a7\"\n  }\n}\n\nconst humidityFormatter = (tick) => tick + \"%\"\nconst temperatureFormatter = (tick) => tick + \"°\"\n\nexport default class extends React.PureComponent {\n\n  tickValues = (arr) => {\n    const now = new Date().getTime()\n    return arr.map((minutesAgo) => {\n      return now - minutesAgo * 60 * 1000;\n    })\n  }\n\n  putDataInHoverCallback = (callbackKey) => {\n    return (data) => {\n      this.props[callbackKey](data, this.props.xTickFnLong || this.props.xTickFn)\n    }\n  } \n\n  sizeFn = (datum, active) => active ? 4 : 2\n\n  render(){\n    return (<VictoryChart containerComponent={ <VictoryVoronoiContainer \n                                                  voronoiDimension=\"x\"\n                                                  onActivated={ this.putDataInHoverCallback(\"mouseOver\") } \n                                                  onDeactivated={ this.putDataInHoverCallback(\"mouseOut\") }/> } \n                          height={390} \n                          domain={ { x: this.props.range } } \n                          domainPadding={ { y: 20 } } >\n            <VictoryLabel \n              text={ this.props.title } \n              x={225} y={30} \n              textAnchor=\"middle\" \n              style={ { \n                  fontFamily: \"Times New Roman\" \n                } }/>\n            <VictoryAxis \n              scale=\"time\"\n              tickCount={ this.props.tickCount }\n              tickFormat={ this.props.xTickFn }\n              tickValues={ this.props.tickValues ? this.tickValues(this.props.tickValues) : this.props.tickValues }\n              style={ axisStyle } />\n            <VictoryAxis \n              dependentAxis \n              tickFormat={ temperatureFormatter }\n              style={ axisStyleDegrees } />\n            <VictoryAxis \n              dependentAxis \n              tickFormat={ humidityFormatter }\n              orientation=\"right\"\n              style={ axisStyleHumidity } />\n            <VictoryLine\n              x=\"time\"\n              y=\"temperature\"\n              interpolation=\"linear\" data={ this.props.data }\n              style={{ data: { stroke: \"#fc0\" } }}\n            />\n            <VictoryScatter data={ this.props.data }\n              x=\"time\"\n              y=\"temperature\"\n              size={ this.sizeFn }\n              style={{ data: { fill: \"#f00\" } }}\n            />\n            <VictoryLine\n              x=\"time\"\n              y=\"humidity\"\n              interpolation=\"linear\" data={ this.props.data }\n              style={{ data: { stroke: \"#0ff\" } }}\n            />\n            <VictoryScatter data={ this.props.data }\n              x=\"time\"\n              y=\"humidity\"\n              size={ this.sizeFn }\n              style={{ data: { fill: \"#0e5\" } }}\n            />\n\n          </VictoryChart>)\n  }\n}","import React from 'react';\nimport Graph from './Graph'\n\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\nconst DAYS_SHORT = [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"]\n\nexport default class extends React.PureComponent {\n\n  timeOfDay = (value) => {\n    const d = new Date(value);\n    const hours = d.getHours()\n    const minutes = d.getMinutes()\n    return `${ hours }:${ minutes > 9 ? minutes : \"0\" + minutes  }`;\n  }\n\n  timeOfDayLong = (value) => {\n    const isToday = (new Date()).getDay() === (new Date(value)).getDay();\n    return this.timeOfDay(value) + (isToday ? \" Today\" : \" Yesterday\");\n  }\n\n  dayOfWeek = (value) => {\n    return DAYS[new Date(value).getDay()];\n  }\n\n  dayOfWeekLong = (value) => {\n    return DAYS_SHORT[new Date(value).getDay()] + \" \" + this.timeOfDay(value);\n  }\n\n  render(){ \n    return (<ol className=\"charts\">\n      <li>\n        <Graph title=\"Last 5 minutes\" xTickFn={ this.props.defaultXTickFn } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.last_5_minutes } isUpdate={ this.props.isUpdate } tickValues={ [5, 4, 3, 2, 1, 0] }/>\n      </li>\n      <li>\n        <Graph title=\"This hour\" xTickFn={ this.props.defaultXTickFn } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.last_hour } tickValues={ [ 50,  30, 10] } />\n      </li>\n      <li> \n        <Graph title=\"Last 24 hours\" xTickFn={ this.timeOfDay } xTickFnLong={ this.timeOfDayLong } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.today }  />\n      </li>\n      <li>\n        <Graph title=\"This week\" xTickFn={ this.dayOfWeek } xTickFnLong={ this.dayOfWeekLong } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.last_week }  range={ [ (new Date().getTime() - (7 * 24 * 60 * 60 * 1000)), new Date().getTime() ] } tickCount={ 6 } />\n      </li>\n    </ol>)\n    } \n}","import React from 'react';\n\nexport default class extends React.PureComponent {\n\n  constructor(props){\n    super(props)\n    this.wrapperRef = React.createRef();\n  }\n\n  state = {\n    scrollY: window.pageYOffset,\n    justUpdated: false\n  }\n\n  handleScroll = () => {\n    this.setState({\n      scrollY: window.pageYOffset\n    })\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const justUpdated = prevState.lastLatestTime && nextProps.latest.time && prevState.lastLatestTime !== nextProps.latest.time\n    // console.log(prevState.lastLatestTime, nextProps.latest.time, justUpdated)\n\n    let previous = null\n    if (!nextProps.latest.time) // switched location\n      previous = null\n    else if (justUpdated)\n      previous = prevState.latest\n    else \n      previous = prevState.previous \n\n    // console.log(nextProps.latest.time, previous)\n\n    return {\n      justUpdated: justUpdated,\n      previous,\n      latest: nextProps.latest,\n      lastLatestTime: nextProps.latest.time\n    };\n  }\n\n  diff = (key) => {\n    // console.log(this.state)\n    if (!this.state.previous)\n      return \"\"\n    const latest = Math.round(this.state.latest[key])\n    const previous = Math.round(this.state.previous[key])\n    if (latest === previous)\n      return \"↔️\"\n    else if (latest > previous)\n      return \"📈\"\n    else if (latest < previous)\n      return \"📉\"\n  }\n\n  componentDidMount =  function() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount =  function() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  componentDidUpdate() {\n    if (this.state.justUpdated && !this.justUpdatedTimeout)\n      this.justUpdatedTimeout = setTimeout(() => {\n        this.setState({ justUpdated: false }, () => {\n          this.justUpdatedTimeout = null;\n        })\n      }, 1000)\n  }\n\n  className(datum){\n    const classes = [\"big-number-wrapper\"];\n\n    if (this.wrapperRef && this.wrapperRef.current\n      && this.state.scrollY > this.wrapperRef.current.offsetTop)\n      classes.push(\"fixed\")\n    if (this.props.hover)\n      classes.push(\"hover\")\n    if (!datum.time)\n      classes.push(\"loading\")\n    if (this.state.justUpdated)\n      classes.push(\"just-updated\")\n    return classes.join(\" \")\n  }\n\n  render(){\n    const datum = this.props.hover || this.props.latest;\n    return (<div ref={ this.wrapperRef } className={ this.className(datum) }>\n    {\n      datum.time ? (<dl className=\"big-number\">\n        <dt>Temperature </dt>\n        <dd className=\"temperature\">{ Math.round(datum.temperature) }° { this.props.hover ? \"\" : this.diff(\"temperature\") }</dd>\n        <dt>Humidity</dt>\n        <dd className=\"humidity\">{ Math.round(datum.humidity) }% { this.props.hover ? \"\" : this.diff(\"humidity\") }</dd>\n        <dt>Time</dt>\n        <dd className=\"time\">{ datum.timeString || this.props.xTick(datum.time) }</dd>\n      </dl>) : \"\"\n    }    \n    </div>)\n  }\n\n\n}","import React, { Component } from 'react';\nimport { getReadings } from '../adapter'\nimport { ActionCable } from 'react-actioncable-provider';\nimport Graphs from './Graphs'\nimport BigNumber from './BigNumber'\n\nimport timeAgo from 'time-ago'\n\nconst DEFAULT_STATE = {\n    latest: {},\n    last_5_minutes: [],\n    last_hour: [],\n    today: [],\n    last_week: [],\n    // last_month: [],\n    // last_year: [],\n  }\nconst celsiusToFahrenheit = c => c * 9 / 5 + 32\n\nexport default class extends Component {\n\n  state = { ...DEFAULT_STATE }\n\n  componentDidMount(){\n    this.setReadings()\n  }\n\n  componentDidUpdate(){\n    if (this.props.location.slug !== this.state.locationSlug)\n      this.setReadings()\n  }\n\n  setReadings(){\n    const { slug } = this.props.location;\n    // console.log(this.state)\n    this.setState({ ...DEFAULT_STATE, locationSlug: slug})\n    getReadings(slug, (data) => {\n      // console.log(this.formatDatum(data.latest))\n      this.setState({\n        latest: this.formatDatum(data.latest),\n        last_5_minutes: this.data(data.last_5_minutes),\n        last_hour: this.data(data.last_hour, \"mean_\", \"start_\"),\n        today: this.data(data.today, \"mean_\", \"start_\"),\n        last_week: this.data(data.last_week, \"mean_\", \"start_\"),\n        locationSlug: slug,\n        isUpdate: false\n      })\n    })\n  }\n\n  data(dataArray, sourceReadingKeyPrefix = \"\", sourceTimeKeyPrefix = \"\"){\n    return dataArray.map((datum) => this.formatDatum(datum, sourceReadingKeyPrefix, sourceTimeKeyPrefix))\n  }\n\n  formatDatum = (reading, sourceReadingKeyPrefix = \"\", sourceTimeKeyPrefix = \"\") => ({\n    humidity: reading[sourceReadingKeyPrefix + \"humidity\"],\n    temperature: celsiusToFahrenheit(reading[sourceReadingKeyPrefix + \"temperature\"]),\n    time: new Date(reading[sourceTimeKeyPrefix + \"time\"]).getTime()\n  })\n\n  handleReceivedReading = (reading) => {\n    const ago5 = new Date() - 5 * 60 * 1000\n    // const ago60 = new Date() - 60 * 60 * 1000\n    const updatedLast5 = this.state.last_5_minutes.filter(reading => reading.time > ago5)\n    // const updatedLastHour = this.state.last_hour.filter(reading => reading.time > ago60)\n    const historicalReading = this.formatDatum(reading.historical_reading);\n    this.setState({\n      latest: historicalReading,\n      last_5_minutes: [ ...updatedLast5, historicalReading ],\n      // last_hour: [ ...updatedLastHour, historicalReading ],\n      isUpdate: true\n    })\n  }\n\n  xTick = (tick) => { \n    const difference = new Date() - tick;\n    return difference < 5 * 1000 ? \"now\" : timeAgo.ago(tick, false) + \" ago\" \n  }\n\n  mouseOver = (data, stringifyFn) => {\n    // // console.log(\"over\", data[0] ? data[0].time : null)\n    const temp = data.find(datum => datum.temperature && !datum.continuous)\n    const hum = data.find(datum => datum.humidity && !datum.continuous)\n    if (temp && hum)\n      this.setState({ hover: { temperature: temp.temperature, humidity: hum.humidity, time: temp.time, timeString: stringifyFn(temp.time) } })\n      // this.setState({ hover: { temperature: 9, humidity: 3, time: 200 } })\n  }\n  mouseOut = (data) => {\n    // console.log(\"out\", data[0] ? data[0].time : null, this.state.hover && this.state.hover.time === data[0].time ? \"matches state\" : \"nope\")\n    // if (this.state.hover && this.state.hover.time === data[0].time)\n    this.setState((prevState) => {\n      if (!data[0] || (prevState.hover && prevState.hover.time === data[0].time))\n        return { hover: null }\n      else\n        return { }\n    })\n  }\n\n  render(){\n    const { location } = this.props;\n    return <section>\n      <h2>\n        { this.props.location.name }\n      </h2>\n      <BigNumber hover={ this.state.hover } latest={ this.state.latest } xTick={ this.xTick } />\n      <ActionCable\n        key={ location.slug }  \n        channel={{ channel: 'ReadingsChannel', location: location.slug }}\n        onReceived={this.handleReceivedReading}\n      />\n      { this.state.last_5_minutes.length ? <Graphs \n        mouseOver={ this.mouseOver } \n        mouseOut={ this.mouseOut } \n        last_5_minutes={ this.state.last_5_minutes }\n        last_hour={ this.state.last_hour }\n        today={ this.state.today }\n        last_week={ this.state.last_week }\n        isUpdate={ this.state.isUpdate }\n        defaultXTickFn={ this.xTick }\n        /> : \"\"}\n    </section>\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function(props) {\n    const linx = props.locations.map(location => { return (<li key={ location.slug }>\n        <NavLink to={ \"/\" + location.slug }>{ location.name }</NavLink>\n      </li>)\n    });\n\n    return (<ol className=\"locations\">\n      { linx }\n    </ol>)\n}\n","import React from 'react';\n\nexport default () => (<React.Fragment>\n  <marquee>Welcome to SwampCast 2000!!!</marquee>\n  <p>Select a location from the menu ^^</p>\n</React.Fragment>)\n","import React, { Component } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\n\n\nimport { getLocations } from './adapter'\n\nimport Location from './components/Location'\nimport Nav from './components/Nav'\nimport Home from './components/Home'\n\n\nexport default class extends Component {\n\n  state = {\n    locations: []\n  }\n\n  componentDidMount(){\n    getLocations(data => {\n      this.setState({ locations: data });\n    });\n  }\n\n  renderLocation = (renderProps) => {\n    const slug = renderProps.match.params.locationSlug;\n    const location = this.state.locations.find(location => location.slug === slug)\n    if (location)\n      return <Location location={ location } />\n    else\n      return <React.Fragment />\n  }\n\n  render(){\n    return (\n      <React.Fragment>\n        <Nav locations={ this.state.locations } />\n        <h1 className=\"header-main\">\n          <NavLink to=\"/\">SwampCast 2000</NavLink>\n        </h1>\n        <hr className=\"graph-divider-top\" />\n        <Route exact path=\"/\" component={ Home } /> \n        <Route path=\"/:locationSlug\" render={ this.renderLocation } />\n      </React.Fragment>\n    );\n  }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ActionCableProvider } from 'react-actioncable-provider';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { API_WS_ROOT } from './adapter'\n\nReactDOM.render(<ActionCableProvider url={API_WS_ROOT}>\n      <Router>\n        <App />\n      </Router>\n    </ActionCableProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}