{"version":3,"sources":["adapter.js","components/Graph.js","components/Graphs.js","components/BigNumber.js","components/Location.js","components/Nav.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["API_ROOT","process","axisStyle","axisLabel","fontFamily","tickLabels","axisStyleDegrees","Object","objectSpread","fill","axisStyleHumidity","humidityFormatter","tick","temperatureFormatter","tickValues","arr","now","Date","getTime","map","minutesAgo","putDataInHoverCallback","callbackKey","data","_this","props","xTickFnLong","xTickFn","sizeFn","datum","active","react_default","a","createElement","victory_chart","containerComponent","victory_voronoi_container","voronoiDimension","onActivated","this","onDeactivated","height","domain","x","range","domainPadding","y","victory_label","text","title","textAnchor","style","victory_axis","scale","tickCount","tickFormat","dependentAxis","orientation","victory_line","interpolation","stroke","victory_scatter","size","React","PureComponent","DAYS","DAYS_SHORT","MONTHS","timeOfDay","value","d","hours","getHours","minutes","getMinutes","concat","timeOfDayLong","isToday","getDay","dayOfWeek","dayOfWeekLong","date","dateObject","getDate","month","getMonth","monthYear","year","getFullYear","fullDate","join","secondsAgo","secondsInTheFuture","arguments","length","undefined","className","Graph_default","defaultXTickFn","mouseOver","mouseOut","last_5_minutes","isUpdate","last_hour","today","last_week","last_month","last_year","_default","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","scrollY","window","pageYOffset","justUpdated","handleScroll","setState","diff","key","previous","latest","Math","round","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","wrapperRef","createRef","_this2","justUpdatedTimeout","setTimeout","classes","current","offsetTop","push","hover","time","float","toFixed","ref","temperature","humidity","timeString","xTick","nextProps","prevState","lastLatestTime","DEFAULT_STATE","fetching","celsiusToFahrenheit","c","formatDatum","reading","sourceReadingKeyPrefix","sourceTimeKeyPrefix","handleReceivedReading","ago5","updatedLast5","filter","historicalReading","historical_reading","toConsumableArray","timeAgo","ago","stringifyFn","temp","find","continuous","hum","setReadings","location","slug","locationSlug","callback","fetch","then","res","json","dataArray","_this3","name","BigNumber_default","lib","channel","onReceived","Graphs_default","Component","Nav","linx","locations","NavLink","to","Home","Fragment","renderLocation","renderProps","match","params","Location_default","Route","exact","path","component","render","Boolean","hostname","ReactDOM","url","HashRouter","App_default","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1fdd0961.chunk.js","sourcesContent":["\nconst API_ROOT = process.env.REACT_APP_API_URL\nexport const API_WS_ROOT = process.env.REACT_APP_SOCKET_URL;\n\n// const HEADERS = {\n//   'Content-Type': 'application/json',\n//   Accept: 'application/json',\n// };\n\nexport function getLocations(callback) {\n  fetch(`${ API_ROOT }/locations`)\n    .then(res => res.json())\n    .then(callback);\n}\n\nexport function getReadings(locationSlug, callback) {\n  fetch(`${ API_ROOT }/locations/${ locationSlug }/readings`)\n    .then(res => res.json())\n    .then(callback);\n}\n","import React from 'react'\nimport { VictoryChart, VictoryLabel, VictoryLine, VictoryScatter, VictoryAxis, VictoryVoronoiContainer } from 'victory'\n\nconst axisStyle = { \n  axisLabel: { \n    fontFamily: \"Times New Roman\" \n  }, \n  tickLabels: { \n    fontFamily: \"Times New Roman\",\n  } \n}\nconst axisStyleDegrees = { \n  ...axisStyle,\n  tickLabels: {\n    ...axisStyle.tickLabels,\n    fill: \"#c50\"\n  }\n}\nconst axisStyleHumidity = { \n  ...axisStyle,\n  tickLabels: {\n    ...axisStyle.tickLabels,\n    fill: \"#0a7\"\n  }\n}\n\nconst humidityFormatter = (tick) => tick + \"%\"\nconst temperatureFormatter = (tick) => tick + \"°\"\n\nexport default class extends React.PureComponent {\n\n  tickValues = (arr) => {\n    const now = new Date().getTime()\n    return arr.map((minutesAgo) => {\n      return now - minutesAgo * 60 * 1000;\n    })\n  }\n\n  putDataInHoverCallback = (callbackKey) => {\n    return (data) => {\n      this.props[callbackKey](data, this.props.xTickFnLong || this.props.xTickFn)\n    }\n  } \n\n  sizeFn = (datum, active) => active ? 4 : 2\n\n  render(){\n    return (<VictoryChart containerComponent={ <VictoryVoronoiContainer \n                                                  voronoiDimension=\"x\"\n                                                  onActivated={ this.putDataInHoverCallback(\"mouseOver\") } \n                                                  onDeactivated={ this.putDataInHoverCallback(\"mouseOut\") }/> } \n                          height={390} \n                          domain={ { x: this.props.range } } \n                          domainPadding={ { y: 20 } } >\n            <VictoryLabel \n              text={ this.props.title } \n              x={225} y={30} \n              textAnchor=\"middle\" \n              style={ { \n                  fontFamily: \"Times New Roman\" \n                } }/>\n            <VictoryAxis \n              scale=\"time\"\n              tickCount={ this.props.tickCount }\n              tickFormat={ this.props.xTickFn }\n              tickValues={ this.props.tickValues ? this.tickValues(this.props.tickValues) : this.props.tickValues }\n              style={ axisStyle } />\n            <VictoryAxis \n              dependentAxis \n              tickFormat={ temperatureFormatter }\n              style={ axisStyleDegrees } />\n            <VictoryAxis \n              dependentAxis \n              tickFormat={ humidityFormatter }\n              orientation=\"right\"\n              style={ axisStyleHumidity } />\n            <VictoryLine\n              x=\"time\"\n              y=\"temperature\"\n              interpolation=\"linear\" data={ this.props.data }\n              style={{ data: { stroke: \"#fc0\" } }}\n            />\n            <VictoryScatter data={ this.props.data }\n              x=\"time\"\n              y=\"temperature\"\n              size={ this.sizeFn }\n              style={{ data: { fill: \"#f00\" } }}\n            />\n            <VictoryLine\n              x=\"time\"\n              y=\"humidity\"\n              interpolation=\"linear\" data={ this.props.data }\n              style={{ data: { stroke: \"#0ff\" } }}\n            />\n            <VictoryScatter data={ this.props.data }\n              x=\"time\"\n              y=\"humidity\"\n              size={ this.sizeFn }\n              style={{ data: { fill: \"#0e5\" } }}\n            />\n\n          </VictoryChart>)\n  }\n}","import React from 'react';\nimport Graph from './Graph'\n\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\nconst DAYS_SHORT = [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"]\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\n// const graphs = \n\nexport default class extends React.PureComponent {\n\n  timeOfDay = (value) => {\n    const d = new Date(value);\n    const hours = d.getHours()\n    const minutes = d.getMinutes()\n    return `${ hours }:${ minutes > 9 ? minutes : \"0\" + minutes  }`;\n  }\n\n  timeOfDayLong = (value) => {\n    const isToday = (new Date()).getDay() === (new Date(value)).getDay();\n    return this.timeOfDay(value) + (isToday ? \" Today\" : \" Yesterday\");\n  }\n\n  dayOfWeek = (value) => {\n    return DAYS[new Date(value).getDay()];\n  }\n\n  dayOfWeekLong = (value) => {\n    return DAYS_SHORT[new Date(value).getDay()] + \" \" + this.timeOfDay(value);\n  }\n\n  date = (value) => {\n    const dateObject = new Date(value);\n    const date = dateObject.getDate();\n    const month = MONTHS[dateObject.getMonth()];\n    return `${ month } ${ date }`;\n  }\n  monthYear = (value) => {\n    const dateObject = new Date(value);\n    const year = dateObject.getFullYear();\n    const month = MONTHS[dateObject.getMonth()];\n    return `${ month } ${ year }`;\n  }\n\n  fullDate = (value) => {\n    const dateObject = new Date(value);\n    const year = dateObject.getFullYear();\n    const month = MONTHS[dateObject.getMonth()];\n    const day = dateObject.getDate();\n    return [month, day + \",\", year].join(\" \")\n  }\n\n  range(secondsAgo, secondsInTheFuture = 0) {\n    const now = new Date().getTime()\n    return [ (now - (secondsAgo * 1000)), now + secondsInTheFuture ];\n  }\n\n  render(){ \n    return (<ol className=\"charts\">\n      <li>\n        <Graph title=\"Last 5 minutes\" xTickFn={ this.props.defaultXTickFn } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.last_5_minutes } isUpdate={ this.props.isUpdate } tickValues={ [5, 4, 3, 2, 1, 0] } range={ this.range(5 * 60, 1) }/>\n      </li>\n      <li>\n        <Graph title=\"This hour\" xTickFn={ this.props.defaultXTickFn } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.last_hour } tickValues={ [ 50,  30, 10] } range={ this.range(60 * 60) } />\n      </li>\n      <li> \n        <Graph title=\"Last 24 hours\" xTickFn={ this.timeOfDay } xTickFnLong={ this.timeOfDayLong } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.today } range={ this.range(24 * 60 * 60) }  />\n      </li>\n      <li>\n        <Graph title=\"Last week\" xTickFn={ this.dayOfWeek } xTickFnLong={ this.dayOfWeekLong } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.last_week } range={ this.range(7 * 24 * 60 * 60) } tickCount={ 6 } />\n      </li>\n      <li>\n        <Graph title=\"Last month\" xTickFn={ this.date } xTickFnLong={ this.date } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.last_month } />\n      </li>\n      <li>\n        <Graph title=\"Last year\" xTickFn={ this.monthYear } xTickFnLong={ this.fullDate } mouseOver={ this.props.mouseOver } mouseOut={ this.props.mouseOut } data={ this.props.last_year } range={ this.range(365 * 24 * 60 * 60) } tickCount={ 6 } />\n      </li>\n    </ol>)\n    } \n}","import React from 'react';\n\nexport default class extends React.PureComponent {\n\n  constructor(props){\n    super(props)\n    this.wrapperRef = React.createRef();\n  }\n\n  state = {\n    scrollY: window.pageYOffset,\n    justUpdated: false\n  }\n\n  handleScroll = () => {\n    this.setState({\n      scrollY: window.pageYOffset\n    })\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const justUpdated = prevState.lastLatestTime && nextProps.latest.time && prevState.lastLatestTime !== nextProps.latest.time\n    // console.log(prevState.lastLatestTime, nextProps.latest.time, justUpdated)\n\n    let previous = null\n    if (!nextProps.latest.time) // switched location\n      previous = null\n    else if (justUpdated)\n      previous = prevState.latest\n    else \n      previous = prevState.previous \n\n    // console.log(nextProps.latest.time, previous)\n\n    return {\n      justUpdated: justUpdated,\n      previous,\n      latest: nextProps.latest,\n      lastLatestTime: nextProps.latest.time\n    };\n  }\n\n  diff = (key) => {\n    // console.log(this.state)\n    if (!this.state.previous)\n      return \"\"\n    const latest = Math.round(this.state.latest[key])\n    const previous = Math.round(this.state.previous[key])\n    if (latest === previous)\n      return \"↔️\"\n    else if (latest > previous)\n      return \"📈\"\n    else if (latest < previous)\n      return \"📉\"\n  }\n\n  componentDidMount =  function() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount =  function() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  componentDidUpdate() {\n    if (this.state.justUpdated && !this.justUpdatedTimeout)\n      this.justUpdatedTimeout = setTimeout(() => {\n        this.setState({ justUpdated: false }, () => {\n          this.justUpdatedTimeout = null;\n        })\n      }, 1000)\n  }\n\n  className(datum){\n    const classes = [\"big-number-wrapper\"];\n\n    if (this.wrapperRef && this.wrapperRef.current\n      && this.state.scrollY > this.wrapperRef.current.offsetTop)\n      classes.push(\"fixed\")\n    if (this.props.hover)\n      classes.push(\"hover\")\n    if (!datum.time)\n      classes.push(\"loading\")\n    if (this.state.justUpdated)\n      classes.push(\"just-updated\")\n    return classes.join(\" \")\n  }\n\n  round(float) {\n    return (Math.round(float * 10) / 10).toFixed(1)\n  }\n\n  render(){\n    const datum = this.props.hover || this.props.latest;\n    return (<div ref={ this.wrapperRef } className={ this.className(datum) }>\n    {\n      datum.time ? (<dl className=\"big-number\">\n        <dt>Temperature </dt>\n        <dd className=\"temperature\">{ this.round(datum.temperature) }° { this.props.hover ? \"\" : this.diff(\"temperature\") }</dd>\n        <dt>Humidity</dt>\n        <dd className=\"humidity\">{ this.round(datum.humidity) }% { this.props.hover ? \"\" : this.diff(\"humidity\") }</dd>\n        <dt>Time</dt>\n        <dd className=\"time\">{ datum.timeString || this.props.xTick(datum.time) }</dd>\n      </dl>) : \"\"\n    }    \n    </div>)\n  }\n\n\n}","import React, { Component } from 'react';\nimport { getReadings } from '../adapter'\nimport { ActionCable } from 'react-actioncable-provider';\nimport Graphs from './Graphs'\nimport BigNumber from './BigNumber'\n\nimport timeAgo from 'time-ago'\n\nconst DEFAULT_STATE = {\n    fetching: true,\n    latest: {},\n    last_5_minutes: [],\n    last_hour: [],\n    today: [],\n    last_week: [],\n    last_month: [],\n    last_year: [],\n  }\nconst celsiusToFahrenheit = c => c * 9 / 5 + 32\n\nexport default class extends Component {\n\n  state = { ...DEFAULT_STATE }\n\n  componentDidMount(){\n    this.setReadings()\n  }\n\n  componentDidUpdate(){\n    if (this.props.location.slug !== this.state.locationSlug)\n      this.setReadings()\n  }\n\n  setReadings(){\n    const { slug } = this.props.location;\n    // console.log(this.state)\n    this.setState({ ...DEFAULT_STATE, locationSlug: slug})\n    getReadings(slug, (data) => {\n      // console.log(this.formatDatum(data.latest))\n      this.setState({\n        latest: this.formatDatum(data.latest),\n        last_5_minutes: this.data(data.last_5_minutes),\n        last_hour: this.data(data.last_hour, \"mean_\", \"start_\"),\n        today: this.data(data.today, \"mean_\", \"start_\"),\n        last_week: this.data(data.last_week, \"mean_\", \"start_\"),\n        last_month: this.data(data.last_month, \"mean_\", \"start_\"),\n        last_year: this.data(data.last_year, \"mean_\", \"start_\"),\n        locationSlug: slug,\n        isUpdate: false,\n        fetching: false,\n      })\n    })\n  }\n\n  data(dataArray, sourceReadingKeyPrefix = \"\", sourceTimeKeyPrefix = \"\"){\n    return dataArray.map((datum) => this.formatDatum(datum, sourceReadingKeyPrefix, sourceTimeKeyPrefix))\n  }\n\n  formatDatum = (reading, sourceReadingKeyPrefix = \"\", sourceTimeKeyPrefix = \"\") => ({\n    humidity: reading[sourceReadingKeyPrefix + \"humidity\"],\n    temperature: celsiusToFahrenheit(reading[sourceReadingKeyPrefix + \"temperature\"]),\n    time: new Date(reading[sourceTimeKeyPrefix + \"time\"]).getTime()\n  })\n\n  handleReceivedReading = (reading) => {\n    const ago5 = new Date() - 5 * 60 * 1000\n    // const ago60 = new Date() - 60 * 60 * 1000\n    const updatedLast5 = this.state.last_5_minutes.filter(reading => reading.time > ago5)\n    // const updatedLastHour = this.state.last_hour.filter(reading => reading.time > ago60)\n    const historicalReading = this.formatDatum(reading.historical_reading);\n    this.setState({\n      latest: historicalReading,\n      last_5_minutes: [ ...updatedLast5, historicalReading ],\n      // last_hour: [ ...updatedLastHour, historicalReading ],\n      isUpdate: true\n    })\n  }\n\n  xTick = (tick) => { \n    const difference = new Date() - tick;\n    return difference < 5 * 1000 ? \"now\" : timeAgo.ago(tick, false) + \" ago\" \n  }\n\n  mouseOver = (data, stringifyFn) => {\n    // // console.log(\"over\", data[0] ? data[0].time : null)\n    const temp = data.find(datum => datum.temperature && !datum.continuous)\n    const hum = data.find(datum => datum.humidity && !datum.continuous)\n    if (temp && hum)\n      this.setState({ hover: { temperature: temp.temperature, humidity: hum.humidity, time: temp.time, timeString: stringifyFn(temp.time) } })\n      // this.setState({ hover: { temperature: 9, humidity: 3, time: 200 } })\n  }\n  mouseOut = (data) => {\n    // console.log(\"out\", data[0] ? data[0].time : null, this.state.hover && this.state.hover.time === data[0].time ? \"matches state\" : \"nope\")\n    // if (this.state.hover && this.state.hover.time === data[0].time)\n    this.setState((prevState) => {\n      if (!data[0] || (prevState.hover && prevState.hover.time === data[0].time))\n        return { hover: null }\n      else\n        return { }\n    })\n  }\n  \n  render(){\n    const { location } = this.props;\n    return <section>\n      <h2>\n        { this.props.location.name }\n      </h2>\n      <BigNumber hover={ this.state.hover } latest={ this.state.latest } xTick={ this.xTick } />\n      <ActionCable\n        key={ location.slug }  \n        channel={{ channel: 'ReadingsChannel', location: location.slug }}\n        onReceived={this.handleReceivedReading}\n      />\n      { this.state.fetching ? \"\" : <Graphs \n        mouseOver={ this.mouseOver } \n        mouseOut={ this.mouseOut } \n        last_5_minutes={ this.state.last_5_minutes }\n        last_hour={ this.state.last_hour }\n        today={ this.state.today }\n        last_week={ this.state.last_week }\n        last_month={ this.state.last_month }\n        last_year={ this.state.last_year }\n        isUpdate={ this.state.isUpdate }\n        defaultXTickFn={ this.xTick }\n        /> }\n    </section>\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function(props) {\n    const linx = props.locations.map(location => { return (<li key={ location.slug }>\n        <NavLink to={ \"/\" + location.slug }>{ location.name }</NavLink>\n      </li>)\n    });\n\n    return (<ol className=\"locations\">\n      { linx }\n    </ol>)\n}\n","import React from 'react';\n\nexport default () => (<React.Fragment>\n  <marquee>Welcome to SwampCast 2000!!!</marquee>\n  <p>Select a location from the menu ^^</p>\n</React.Fragment>)\n","import React, { Component } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\n\n\nimport { getLocations } from './adapter'\n\nimport Location from './components/Location'\nimport Nav from './components/Nav'\nimport Home from './components/Home'\n\n\nexport default class extends Component {\n\n  state = {\n    locations: []\n  }\n\n  componentDidMount(){\n    getLocations(data => {\n      this.setState({ locations: data });\n    });\n  }\n\n  renderLocation = (renderProps) => {\n    const slug = renderProps.match.params.locationSlug;\n    const location = this.state.locations.find(location => location.slug === slug)\n    if (location)\n      return <Location location={ location } />\n    else\n      return <React.Fragment />\n  }\n\n  render(){\n    return (\n      <React.Fragment>\n        <Nav locations={ this.state.locations } />\n        <h1 className=\"header-main\">\n          <NavLink to=\"/\">SwampCast 2000</NavLink>\n        </h1>\n        <hr className=\"graph-divider-top\" />\n        <Route exact path=\"/\" component={ Home } /> \n        <Route path=\"/:locationSlug\" render={ this.renderLocation } />\n      </React.Fragment>\n    );\n  }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ActionCableProvider } from 'react-actioncable-provider';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { API_WS_ROOT } from './adapter'\n\nReactDOM.render(<ActionCableProvider url={API_WS_ROOT}>\n      <Router>\n        <App />\n      </Router>\n    </ActionCableProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}